<?xml version="1.0"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <properties>
        <title>Getting Started with CSSParser</title>
        <author email="rbri@rbri.de">RBRi</author>
    </properties>

    <body>
        <section name="Output Formatting">
            <p>
                Starting with version 0.9.16 CSSParser includes limited support of output formatting.
                At the moment the formatter uses a fixed layout.<br/>
                There is an option that forces for the output of color values as hex instead of rgb.
                Additionally there is an option that forces placing of every property from a rule in
                a separate line.
            </p>
            <p>
                If you need more options, please open a ticket.
            </p>
            <source><![CDATA[
InputSource source = new InputSource(new StringReader("h1{background:rgb(7,42,0)}"));
CSSOMParser parser = new CSSOMParser(new SACParserCSS3());
CSSStyleSheetImpl sheet = (CSSStyleSheetImpl) parser.parseStyleSheet(source, null, null);

Assert.assertEquals("h1 { background: rgb(7, 42, 0) }", sheet.getCssText());

Assert.assertEquals("h1 { background: #072a00 }", sheet.getCssText(new CSSFormat().setRgbAsHex(true)));

Assert.assertEquals("h1 {" + NEW_LINE + "    background: rgb(7, 42, 0)" + NEW_LINE + "}", sheet.getCssText(new CSSFormat().setPropertiesInSeparateLines(4)));
]]></source>
        </section>
    </body>
</document>
